<!--VARIABLES {"title": "Project setup", "SORT_ORDER": "030", "code": "project_setup"}-->

[TOC]

----------------------------------------------------------------------------------------------------
# Materials

[[1.2][]] ???

[1.2]: <!--page refs-->#ref_1_2

----------------------------------------------------------------------------------------------------
# Install and setup Jetty server

Home page: <https://www.eclipse.org/jetty/>    
Downloads: <https://www.eclipse.org/jetty/download.php>    
Checksums: <https://www.eclipse.org/jetty/download_info.php>

Version 9.4.51.v20230217 is used. Following the instructions [here](
https://www.eclipse.org/jetty/documentation/jetty-9/index.html#quickstart-running-jetty):

1. Unzip the distribution pack to the directory by choice, e.g. 
    `jetty-distribution-9.4.51.v20230217.zip/jetty-distribution-9.4.51.v20230217` to `jetty_9_4_51`.
2. Create the `JETTY_HOME` environment variable that points the `jetty_9_4_51` directory.
3. Create the `JETTY_BASE` environment variable that points the directory where the applications
    will be located.
    
Execute the following commands to initialize the Jetty base directory:

````wrapped-shell
>cd /d %JETTY_BASE%

>java -jar %JETTY_HOME%\start.jar --create-startd
MKDIR : ${jetty.base}\start.d
INFO  : Base directory was modified

>java -jar %JETTY_HOME%\start.jar --add-to-start=http,deploy
INFO  : webapp          transitively enabled, ini template available with --add-to-start=webapp
.  .  .
MKDIR : ${jetty.base}\webapps
INFO  : Base directory was modified

>java -jar %JETTY_HOME%\start.jar
2023-03-18 11:36:14.115:INFO::main: Logging initialized @439ms to org.eclipse.jetty.util.log.StdErrLog
.  .  .
2023-03-18 11:36:14.306:INFO:oejs.AbstractConnector:main: Started ServerConnector@cd2dae5{HTTP/1.1, (http/1.1)}{0.0.0.0:8080}
2023-03-18 11:36:14.306:INFO:oejs.Server:main: Started @630ms
````

In a browser navigate to <http://localhost:8080/> to see an "Error 404 - Not Found" page. To stop
the server press `Ctrl`+`C`.

<a name="activate_jetty_jsp_module"></a>
As we are going to use JSP, adding the `jsp` module, also see the Jetty documentation:

- [Configuring JSP Support](
    https://www.eclipse.org/jetty/documentation/jetty-9/index.html#configuring-jsp)
- [Managing Startup Modules](
    https://www.eclipse.org/jetty/documentation/jetty-9/index.html#startup-modules)
    
````shell
>java -jar %JETTY_HOME%\start.jar --add-to-start=jsp
INFO  : mail            transitively enabled
INFO  : apache-jsp      transitively enabled
INFO  : jsp             initialized in ${jetty.base}\start.d\jsp.ini
INFO  : jndi            transitively enabled
INFO  : annotations     transitively enabled
INFO  : transactions    transitively enabled
INFO  : plus            transitively enabled
INFO  : Base directory was modified
````

----------------------------------------------------------------------------------------------------
# Initialize Maven project


````wrapped-shell
>mvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DarchetypeVersion=1.4 -DgroupId=world.someone -DartifactId=spring-mvc-study -DinteractiveMode=false

>ren spring-mvc-study javaProject
````

The official documentation
[Maven Webapp Archetype](https://maven.apache.org/archetypes/maven-archetype-webapp/) is not pretty
much helpful but the command `mvn archetype:help -Dgoal=generate -Ddetail=true` may give some more 
clarification.

Also here is the [Maven Webapp Archetype](
https://mvnrepository.com/artifact/org.apache.maven.archetypes/maven-archetype-webapp)
artifact.

After some reformatting and deletion the POM file looks the following way:

````xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
            http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>world.someone</groupId>
    <artifactId>spring-mvc-study</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

</project>
````

This simple setup looks like being enough for running in Jetty server. Just need to execute
the command `mvn clean package` and copy the file `target/spring-mvc-study-1.0-SNAPSHOT.war`
into the directory `%JETTY_BASE%/webapps`. Please make sure that the Jetty `jsp` is activated 
(see [here](<!--page project_setup-->#activate_jetty_jsp_module)).

Navigate to <http://localhost:8080/spring-mvc-study-1.0-SNAPSHOT/> to see the result:

![](<!--path pict-->hello_world.png)


!!! note
    As for now <https://search.maven.org> redirects to <https://central.sonatype.com/>. 
    To avoid this redirection navigate to <https://search.maven.org/?eh=>.







