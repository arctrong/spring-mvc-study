<!--VARIABLES {"title": "Server setup", "SORT_ORDER": "030", "code": "server_setup"}-->

[TOC]

----------------------------------------------------------------------------------------------------
# About this section

This section describes simple Jetty server installation and setup. Small useless application
is going to be created and run for a sanity check.

[3]: <!--page refs-->#ref_3
[4]: <!--page refs-->#ref_4

----------------------------------------------------------------------------------------------------
# Install and setup Jetty server

Home page: <https://www.eclipse.org/jetty/>    
Downloads: <https://www.eclipse.org/jetty/download.php>    
Checksums: <https://www.eclipse.org/jetty/download_info.php>

Version 9.4.51.v20230217 is used. Following the instructions [[4][], [Running Jetty](
https://www.eclipse.org/jetty/documentation/jetty-9/index.html#quickstart-running-jetty)]:

1. Unzip the distribution pack to the directory by choice, e.g. 
    `jetty-distribution-9.4.51.v20230217.zip/jetty-distribution-9.4.51.v20230217` to `jetty_9_4_51`.
2. Create the `JETTY_HOME` environment variable that points the `jetty_9_4_51` directory.
3. Create the `JETTY_BASE` environment variable that points the directory where the applications
    will be located.
    
Execute the following commands to initialize the Jetty base directory:

````wrapped-shell
>cd /d %JETTY_BASE%

>java -jar %JETTY_HOME%\start.jar --create-startd
MKDIR : ${jetty.base}\start.d
INFO  : Base directory was modified

>java -jar %JETTY_HOME%\start.jar --add-to-start=http,deploy
INFO  : webapp          transitively enabled, ini template available with --add-to-start=webapp
.  .  .
MKDIR : ${jetty.base}\webapps
INFO  : Base directory was modified

>java -jar %JETTY_HOME%\start.jar
2023-03-18 11:36:14.115:INFO::main: Logging initialized @439ms to org.eclipse.jetty.util.log.StdErrLog
.  .  .
2023-03-18 11:36:14.306:INFO:oejs.AbstractConnector:main: Started ServerConnector@cd2dae5{HTTP/1.1, (http/1.1)}{0.0.0.0:8080}
2023-03-18 11:36:14.306:INFO:oejs.Server:main: Started @630ms
````

In a browser navigate to <http://localhost:8080/> to see an "Error 404 - Not Found" page. To stop
the server press `Ctrl`+`C`.

<a name="activate_jetty_jsp_module"></a>
As we are going to use JSP, adding the `jsp` module, also see the Jetty documentation [[4][]]:

- [Configuring JSP Support](
    https://www.eclipse.org/jetty/documentation/jetty-9/index.html#configuring-jsp)
- [Managing Startup Modules](
    https://www.eclipse.org/jetty/documentation/jetty-9/index.html#startup-modules)
    
````shell
>java -jar %JETTY_HOME%\start.jar --add-to-start=jsp
INFO  : mail            transitively enabled
INFO  : apache-jsp      transitively enabled
INFO  : jsp             initialized in ${jetty.base}\start.d\jsp.ini
INFO  : jndi            transitively enabled
INFO  : annotations     transitively enabled
INFO  : transactions    transitively enabled
INFO  : plus            transitively enabled
INFO  : Base directory was modified
````

----------------------------------------------------------------------------------------------------
# Initialize Maven project

````wrapped-shell
>mvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DarchetypeVersion=1.4 -DgroupId=world.someone -DartifactId=web-app-jetty -DinteractiveMode=false
````

For more details about *Maven Webapp Archetype* see:

- The official documentation
    [Maven Webapp Archetype](https://maven.apache.org/archetypes/maven-archetype-webapp/)
- The command `mvn archetype:help -Dgoal=generate -Ddetail=true`
- [Maven Webapp Archetype](
    https://mvnrepository.com/artifact/org.apache.maven.archetypes/maven-archetype-webapp)
    artifact

After some reformatting and deleting unnecessary things the `pom.xml` file looks like the following:

````xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
          http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>world.someone</groupId>
    <artifactId>web-app-jetty</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <build>
        <finalName>${project.artifactId}</finalName>
    </build>
</project>

````

The `build/finalName` element is added to avoid the version in the artifact war-file name.

The deployment descriptor look like this:

````xml
<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>
    <display-name>JSP Example Application</display-name>
</web-app>
````

!!! note
    The current `DOCTYPE` declaration though being old-fashioned still works. There are 
    controversial information on the Internet  about the proper schemata declarations, and also
    IntelliJ Idea complains with "element 'web-app' must be declared" when newer declarations
    are used. Looks like it takes too much time to find the way of avoiding it.

The sample `index.jsp` file was edited to demonstrate that the specific JSP syntax works 
(also see [[3][]]):

````xml
<html><body>
<h2>Hello World!</h2>
<p>Counting to three:
<% for (int i=1; i<4; i++) { %>
    <%= i %>,
<% } %>
OK.</p>
</body></html>
````

This simple setup looks like being enough for running in Jetty server. Just need to build the
artifact:

````shell
>cd web-app-jetty

>mvn clean package
````

Copy the file `target/web-app-jetty.war` into the `%JETTY_BASE%/webapps` directory. Make sure
that the Jetty `jsp` is activated (see [here](<!--page server_setup-->#activate_jetty_jsp_module)).
Stop the Jetty server by pressing `Ctrl`+`C`, if it's running, and start it again:

````shell
>java -jar %JETTY_HOME%\start.jar
````

Navigate to <http://localhost:8080/web-app-jetty/> to see the result:

![](<!--path pict-->hello_world.png)

> Git commit: `429b1fd4f65f6182962255078e0d32bd02949b50` simplest web app run in Jetty




