<!--VARIABLES {"title": "Sessions and cookies", "SORT_ORDER": "080", "code": "sessions_and_cookies"}-->

[TOC]

[2.13]: <!--page refs-->#ref_2_13
[16]: <!--page refs-->#ref_16

----------------------------------------------------------------------------------------------------
Mar 30, 2023

<!--index ["sessions, HTTP", "cookies, HTTP"]-->
# What is session and cookies

[[2.13][]]

HTTP is a stateless protocol so it doesn't save information between the requests. **Cookies**
were invented in maybe 1995 to fill this gap.

Also see [[16][]].

----------------------------------------------------------------------------------------------------
# Implement cookies transfer

[[2.13][], [12:23](https://youtu.be/cpFfzE9eGT0?t=743)]

This is the first simple implementation that is probably not to be used in production.

> Git commit: [`84ef7a5077be8aebf246e238b4f66d4efc2f220a`](
> <!--path patches-->84ef7a5077be8aebf246e238b4f66d4efc2f220a.html)
> first simple cookie usage demonstrated

In the `/validate-submit` endpoint we create a `Cookie` and add it to the `HttpServletResponse`
object that is provided by Spring MVC via the corresponding controller method parameter 
`response`. After the response is received the added cookie may be viewed in the debugger (F12):

![](<!--path pict-->debug_cookies.png)

The added cookie is sent by the browser with every subsequent request so it can be used on every
page like the one that is returned by the `/validate` endpoint.

----------------------------------------------------------------------------------------------------
<!--index ["@CookieValue"]-->
# Managing cookies using Spring

[[2.13][], [37:28](https://youtu.be/cpFfzE9eGT0?t=2248)]

The above method is much inconvenient especially when used in a lot of controllers. The Spring 
`@CookieValue` annotation may help simplify this task (see the [`EmailController`](
<!--path code-->web-app-spring-adv3/src/main/java/springmvcstudy2/controllers/EmailController.java)
class):

````code
    @RequestMapping("/sendEmail")
    public String sendEmail(@CookieValue("myApp.userName") String userName, Model model) {
        model.addAttribute("sendEmailDto", new SendEmailDto());
        model.addAttribute("userName", userName);
        return "send-email-page";
    }
````

> Git commit: [`fe7f898864fc585ea03e2e6e195c46e9700cf9ac`](
> <!--path patches-->fe7f898864fc585ea03e2e6e195c46e9700cf9ac.html)
> using @CookieValue annotation

----------------------------------------------------------------------------------------------------
# Problems with cookies

[[2.13][], [43:25](https://youtu.be/cpFfzE9eGT0?t=2605)]

