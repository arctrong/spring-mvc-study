<!--VARIABLES {"title": "Send email", "SORT_ORDER": "070", "code": "send_email"}-->

[TOC]

[2.12]: <!--page refs-->#ref_2_12

----------------------------------------------------------------------------------------------------
Mar 29, 2023

# Project arrangements

Maven project `web-app-spring-adv2` was copied to `web-app-spring-adv3` to leave the previous
changes untouched.

----------------------------------------------------------------------------------------------------
# Creating the forms

[[2.12][], [7:56](https://youtu.be/xhKP9o9I85g?t=476)]

On the existing view [`result-page-spring.jsp`](
<!--path code-->web-app-spring-adv2/src/main/webapp/view/result-page-spring.jsp)
adding a link for sending an email:

![](<!--path pict-->send_email_01.png)

<!--index ["pageContext, variable"]-->
The `pageContext` is an implicit variable accessible in all JSP pages.

The URL is [http://localhost:8080/web-app-spring-adv3/ui/validate-submit?...](
http://localhost:8080/web-app-spring-adv3/ui/validate-submit?name1=Bob&name2=Claudia&notARobot=true&_notARobot=on).

The email inputting form [`send-email-page.jsp`](
<!--path code-->web-app-spring-adv3/src/main/webapp/WEB-INF/view/send-email-page.jsp)
is created:

![](<!--path pict-->send_email_02.png)

The URL is <http://localhost:8080/web-app-spring-adv3/ui/sendEmail>.

The email sending successful page [`process-email-page.jsp`](
<!--path code-->web-app-spring-adv3/src/main/webapp/WEB-INF/view/process-email-page.jsp)
is created:

![](<!--path pict-->send_email_03.png)

The URL is <http://localhost:8080/web-app-spring-adv3/ui/process-email?userEmail=myemail%40domain.com>.

The controller is [`EmailController`](
<!--path code-->web-app-spring-adv3/src/main/java/springmvcstudy2/controllers/EmailController.java).

the model DTO is [`SendEmailDto`](
<!--path code-->web-app-spring-adv3/src/main/java/springmvcstudy2/model/SendEmailDto.java).

See the below commit for the implementation details.

> Git commit: `c23f1c1ba16e42cc1b8a702951b488830930c8ac` send email skeleton forms created

See [here](<!--page server_setup-->#project_start_on_server) for information about the project start.

----------------------------------------------------------------------------------------------------
<!--index ["path variables", "@PathVariable"]-->
# Using path variables

[[2.12][], [26:35](https://youtu.be/xhKP9o9I85g?t=1595)]

Here we are going to send the user name parameter through URL path.

In the [`result-page-spring.jsp`](
<!--path code-->web-app-spring-adv2/src/main/webapp/view/result-page-spring.jsp)
view adding a variable path segment to the link URL:

````xml
<p><a href="${pageContext.request.contextPath}/ui/sendEmail/${dto.name1}"
>Send result to your email</a></p>
````

In the [`EmailController`](
<!--path code-->web-app-spring-adv3/src/main/java/springmvcstudy2/controllers/EmailController.java)
class do some modification to the corresponding controller method:

````code
    @RequestMapping("/sendEmail/{userName}")
    public String sendEmail(@PathVariable String userName, Model model) {
        model.addAttribute("sendEmailDto", new SendEmailDto());
        model.addAttribute("userName", userName);
        return "send-email-page";
    }
````

As we explicitly added a `Model` argument we now need to populate it completely.
Also the `@PathVariable` annotation may have a parameter specifying the path variable name
if it differs from the method parameter name.

After that is done, the URL will become like this:
<http://localhost:8080/web-app-spring-adv3/ui/sendEmail/Bob>.

In the [`send-email-page.jsp`](
<!--path code-->web-app-spring-adv3/src/main/webapp/WEB-INF/view/send-email-page.jsp)
using the new model attribute:

````xml
.  .  .
<h1>Hi ${userName}!</h1>
.  .  .
````

> Git commit: [`236fe6a16456e9d45e935d6849e5adb8bb1eb7e8`](
> <!--path patches-->236fe6a16456e9d45e935d6849e5adb8bb1eb7e8.html)
> path variable used


## Using a `Map`

[[2.12][], [47:37](https://youtu.be/xhKP9o9I85g?t=2857)]

The alternative path variable access method is using a `Map` (see the [`EmailController`](
<!--path code-->web-app-spring-adv3/src/main/java/springmvcstudy2/controllers/EmailController.java)
class):

````code
    @RequestMapping("/sendEmail/{userName}")
    public String sendEmail(@PathVariable Map<String, String> pathVariables, Model model) {
        model.addAttribute("sendEmailDto", new SendEmailDto());
        model.addAttribute("userName", pathVariables.get("userName"));
        return "send-email-page";
    }
````

> Git commit: [`cb8843c8ea7c29ae9f62b19fa915e14a8d9c74e4`](
> <!--path patches-->cb8843c8ea7c29ae9f62b19fa915e14a8d9c74e4.html)
> path variable used with a Map

----------------------------------------------------------------------------------------------------
# Why not to send data in the URL?

[[2.12][], [50:47](https://youtu.be/xhKP9o9I85g?t=3047)]

There are some problems with sending data through the URL:

- The data must be sent throughout all the pages that need this data.
- If the link is bookmarked of sent to the other user it will contain irrelevant data.

The solution will be discussed in the upcoming sections.








